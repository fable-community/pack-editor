import {
  DynamicRetrievalMode,
  GoogleGenerativeAI,
} from '@google/generative-ai';

import { captureException } from '~/utils/sentry.ts';

import type { Handlers } from '$fresh/server.ts';

const apiKey = Deno.env.get('GEMINI_API_KEY');

export interface Data {
  characterName?: string;
  mediaTitle?: string;
}

const generationConfig = {
  temperature: 1,
  topP: 0.95,
  topK: 40,
  maxOutputTokens: 8192,
  responseMimeType: 'text/plain',
};

export const handler: Handlers = {
  async POST(req): Promise<Response> {
    let prompt = '';

    const data: Data = await req.json();

    if (!data.characterName && !data.mediaTitle) {
      return new Response('Character Name/Media Title not defined', {
        status: 400,
      });
    }

    if (data.characterName && data.mediaTitle) {
      prompt =
        `Create a short description for the character ${data.characterName} from ${data.mediaTitle}, keep it short and about the character personality and traits.`;
    } else if (data.characterName) {
      prompt =
        `Create a short description for the character ${data.characterName}, keep it short and about the character personality and traits.`;
    } else if (data.mediaTitle) {
      prompt = `Create a short description for ${data.mediaTitle}`;
    }

    if (!apiKey) {
      return new Response('Internal Server Error', { status: 500 });
    }

    console.log(apiKey);

    const genAI = new GoogleGenerativeAI(apiKey);

    const model = genAI.getGenerativeModel({
      model: 'gemini-1.5-flash',
      systemInstruction:
        'You are a multimedia encyclopedia. Only write back the answers.',
      tools: [{
        googleSearchRetrieval: {
          dynamicRetrievalConfig: {
            mode: DynamicRetrievalMode.MODE_DYNAMIC,
            dynamicThreshold: 0.3,
          },
        },
      }],
    });

    const chatSession = model.startChat({
      generationConfig,
      history: [],
    });

    try {
      const result = await chatSession.sendMessage(prompt);

      return new Response(
        JSON.stringify({
          content: result.response.text() +
            '\n\n(Generated by AI)',
        }),
        { headers: { 'Content-Type': 'application/json' } },
      );
    } catch (err) {
      captureException(err);
      console.error(err);
      return new Response('Internal Server Error', { status: 500 });
    }
  },
};
